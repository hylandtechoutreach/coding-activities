Hello!

Today I'm going to show you how you can build a heart-healthy website with HTML & CSS. Let's start with some background. <click>

What is HTML? <click>

HTML is a markup language. <click>

It is the most basic building block of the web. <click>

Web browsers take HTML text and turn it into a website! <click>

It looks something like this. <click through>

Now, what is CSS? <click>

CSS is a styling language for websites. <click>

It can update fonts, colors, and more! <click>

Take a look at this example. This is a website that uses CSS. Now, see how it would look without any CSS. Almost every website out there uses CSS! <click>

Next, we'll talk about building websites. What is repl dot it? <click>

Repl dot it is a tool that lets developers create websites. <click>

It looks like this. The HTML code is on the left, and the website is on the right. Pretty cool! <click>

Now we're ready to jump into the activity. Let's get started! Go to this URL to begin. b i t dot l why slash heart website.<click URL>

This page has all the instructions and links for the activity we're doing today. You can follow along from here! We'll start by opening up the existing heart healthy website Repl project.

At the top of this page, find a click the "Fork" button to create a fork of this project.

Next, click the "Run" button at the top of the page to build the website from the HTML.

Verify that both the HTML code _and_ the website appear on the page!

Now let's take a closer look at the HTML code. Notice how the code in the HTML creates the text on the website we're building. Everything in HTML goes between _tags_, which tell the website what type of element to display.

For example, the text between the <h1> and </h1> tags becomes a large header. The text between the <p> and </p> tags becomes normal sized text. The text within the <li> and </li> tags are bulleted items in a list.

The website looks okay, but there's a lot we can do to make it better. The first thing to do is update the header text with your name! For example, since my name is Joseph, I can change the header so that it says Joseph's Heart Healthy Website. You should change it so it has your name!

Update the code in the HTML section, between the h1 and slash h1 tags. Now, click the run button again, and make sure the text on the website updates with the new header!

Now let's add an image. Almost every website has at least one image, and we would like our website to have one too! In fact, the code already has the proper tag in place! All we need to do is find an image, and paste the URL into the HTML code.

First, go to the heart images page (linked in the instructions), and find a heart you like. I like this one.

Copy the URL listed above the heart by highlighting the text, right clicking, and selecting "Copy". You can also do Control+C or Command+C

Then, go back to the Repl, and find the i.m.g. tag in the HTML. Click right between the double quotes, and paste in the copied URL! You can right click and select "Paste", or do CTRL+V or CMND+V.

Click run again, and verify that the heart image appears on your website!

What else can we change? Currently, the list of heart-healthy foods only has placeholder items. We want it to have some real foods! Update the HTML code so that the website displays a list of foods.

First, go to the heart-healthy foods page linked in the instructions. Pick three of your favorites!

Once you have decided, go back to the Repl and find the <ul> tags in the HTML section. This is code for the list on the website.

Update the text between each li and slash li tag with one of the heart healthy foods from the list.

Click run again, and verify that the new foods appear in the list on the website!

Wow, our website is looking much better. So far, we have update the content of the website with HTML, but we haven't done anything with the style. That's where CSS comes in! CSS can change the style of the page, without affecting the content.

Take a look at the code within the <style> tags in the html, and try to figure out what it does.

Find the area where it sets the background color. It says "background: white." Change the "white" to pink to change the background color!

Next, find where it sets the text color. It says "Color: black." Change the "black" to red to change the text color!

Always make sure each one of these lines ends with a semi-colon. If it doesn't, your code might not work!

Click the "Run" button again, and see the colors update!

Our page looks much brighter now! But what if we wanted to use more specific colors? Some basic colors are built into the web, like pink and red, but it is also possible to use custom colors. Each color can be represented by a special color code: a hashtag followed by six alphanumeric characters. The easiest way to use one of these custom colors is to use a color picker. Let's do it!

We will use Google's color picker tool, linked from the instructions. Drag the two sliders around to select a new shade of pink. Once you have a color you like, highlight the code text under where it says HEX, and copy it.

When it's copied, go back to the repl, and remove the "pink" from the CSS. Paste in the new code instead! After clicking run, you should see that the new pink color appears. Cool! You can do the same thing to select a new shade of red. Go to the color picker, drag the sliders around, copy the hex code, and replace the color in the CSS. Wow!

Our website is looking pretty great now. Certainly a lot better than it started. Congratulations, you've successfuly built your own heart-healthy website!

If you'd like to share it, you can copy the URL from the bar at the top of the website. Paste the link anywhere to share it.

I hope you've enjoyed this activity. Thanks for watching!
